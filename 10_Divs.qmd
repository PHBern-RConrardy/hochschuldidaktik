# Callouts, Figures und weitere `:::-` Elemente

In diesem Kapitel lernst du die wichtigsten ‚ÄûBaukasten‚Äú-Elemente mit `:::` kennen: **Callouts** (Hinweisboxen), **Figures** (Bilder mit Beschriftung), **Columns** (Inhalte nebeneinander), **Tabsets** (Reiter) und **eigene Divs**. Du brauchst daf√ºr keine HTML-Kenntnisse.


## Grundprinzip: Divs mit `:::` √∂ffnen und schliessen

Viele erweiterte Elemente beginnen mit `:::` und enden mit `:::`. Die **Art** des Elements steuerst du mit einer **Klasse** in geschweiften Klammern:

```markdown
::: {.meine-klasse}
Inhalt hier ‚Ä¶
:::
```

Quarto erkennt an der Klasse (z. B. `.callout-note`), was daraus werden soll.


## Callouts (Hinweisboxen)

Callouts eignen sich f√ºr Tipps, Warnungen oder Beispiele. H√§ufige Varianten sind: `note`, `tip`, `warning`, `important`, `caution`.

```markdown
::: {.callout-note}
### Hinweis
So f√ºgst du eine kurze Erkl√§rung ein.
:::

::: {.callout-tip}
### Tipp
Das ist besonders praktisch beim Erkl√§ren von Arbeitsschritten.
:::

::: {.callout-warning}
### Achtung
Hier bitte genau lesen, sonst klappt es nicht.
:::
```

Du kannst √úberschriften weglassen oder k√ºrzer schreiben ‚Äì wichtig ist die Klasse `.callout-‚Ä¶`.

üì∏ Screenshot: Drei Callouts nebeneinander/untereinander


## Figures (Bilder mit Bildunterschrift, Gr√∂sse, Ausrichtung)

Es gibt zwei bequeme Wege. W√§hle einen und bleibe dabei konsistent.

### Weg 1: Markdown-Bild mit Bildunterschrift und Attributen

```markdown
![Bildunterschrift: Logo PHBern](images/phbern-logo.png){fig-align="center" width="50%"}
```

- `fig-align="center"` zentriert das Bild.  
- `width="50%"` skaliert die Breite relativ zur Seite.

### Weg 2: Div mit `figure`-Rolle

::: {#fig-logo}
![Logo PHBern](screenshots/gui_projekt.png){width="45%"}

*Logo der PHBern*
:::

```markdown
::: {#fig-logo phbern .figure}
![Logo PHBern](screenshots/gui_projekt.png){width="45%"}

*Logo der PHBern*
:::
```

- Die letzte Zeile ist die Bildunterschrift (kursiv).  
- Mit einer ID wie `{#fig-logo}` kannst du **verweisen**: *siehe @fig-logo*.


## Columns (Inhalte nebeneinander)

Mit Columns kannst du Text und Bild oder zwei Texte **nebeneinander** darstellen.

```markdown
::: {.columns}
::: {.column width="60%"}
**Text links:** Hier steht der Hauptinhalt. Du kannst √úberschriften, Listen und Bilder verwenden.
:::
::: {.column width="40%"}
**Rechts:** Ein Bild oder eine Liste.
![Logo](screenshots/gui_projekt.png){width="80%"}
:::
:::
```

- Die Summe der Breiten sollte ungef√§hr 100‚ÄØ% ergeben.  
- Ohne `width` teilt Quarto den Platz automatisch.


## Tabsets (Reiter)

Tabsets sind n√ºtzlich, wenn du Varianten oder Beispiele trennen willst (z. B. zwei L√∂sungswege).

```markdown
::: {.panel-tabset}
## Variante A
Kurze Erkl√§rung f√ºr die erste Variante.

## Variante B
Alternative Darstellung mit anderem Beispiel.

## H√§ufige Fragen
Antworten zu typischen R√ºckfragen.
:::
```

- Jede **√úberschrift der Ebene 2** (`##`) wird zu einem Tab.  
- Du kannst innerhalb der Tabs ganz normalen Markdown verwenden.


## Eigene Divs f√ºr Gestaltung oder Logik

Wenn du sp√§ter mit CSS arbeitest oder Abschnitte gezielt ansprechen willst, kannst du eigene Klassen vergeben:

```markdown
::: {.lernziel}
**Lernziele**
- Ich kann Callouts einsetzen.
- Ich kann Bilder mit Bildunterschriften zentrieren.
:::
```

Sp√§ter k√∂nntest du `.lernziel` in `styles.css` gestalten (z. B. Rahmen, Hintergrund).


## Kombinationen

Elemente lassen sich kombinieren ‚Äì zum Beispiel ein Callout **mit** Columns:

```markdown
::: {.callout-note}
### Beispiel mit zwei Spalten

::: {.columns}
::: {.column}
- Punkt A
- Punkt B
:::
::: {.column}
![Skizze](screenshots/gui_projekt.png){width="90%"}
:::
:::
:::
```

Achte beim Verschachteln auf die **Reihenfolge** und schlie√üe jedes `:::`.


## H√§ufige Fehler und L√∂sungen

- **‚ÄûUnerwartetes Ende‚Äú oder komisches Layout**: Meist fehlt ein schlie√üendes `:::`. Z√§hle die Bl√∂cke und schlie√üe sie von innen nach au√üen.  
- **Klasse wirkt nicht**: Stimmt die Schreibweise? (`.callout-tip`, `.panel-tabset`, `.columns`, `.column`)  
- **Bilder zu gro√ü/klein**: Mit `width="‚Ä¶"` anpassen (z.‚ÄØB. `width="60%"`).  
- **Verweise auf Figures** funktionieren nicht: Verwende eine **ID** (z.‚ÄØB. `{#fig-logo}`) und verweise mit `@fig-logo`.


## Mini-Vorlage zum Kopieren

```markdown
# Titel

Einf√ºhrungstext ‚Ä¶

::: {.callout-tip}
### Tipp
Kurzer Hinweis f√ºr die Studierenden.
:::

## Beispiel mit Bild

![Beispielbild](screenshots/gui_positron_inception.png){fig-align="center" width="60%"}

## Zwei Spalten

::: {.columns}
::: {.column width="55%"}
Text hier ‚Ä¶
:::
::: {.column width="45%"}
![Grafik](screenshots/gui_positron_inception.png){width="90%"}
:::
:::

## Varianten im Tabset

::: {.panel-tabset}
### Variante 1
Erkl√§rung ‚Ä¶

### Variante 2
Alternative ‚Ä¶
:::
```


## Zusammenfassung

- `:::` er√∂ffnet/endet einen **Div-Block** ‚Äì die Klasse in `{‚Ä¶}` steuert die Art.  
- **Callouts** f√ºr Hinweise, **Figures** f√ºr Bilder mit Beschriftungen, **Columns** f√ºr zwei Spalten, **Tabsets** f√ºr Reiter.  
- Saubere Verschachtelung und korrekte Klassen sind entscheidend.
