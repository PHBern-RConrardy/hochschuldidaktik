# Quarto starten ohne Terminal

## Lernziele

Nach diesem Kapitel verstehst du:

- was ein *Terminal* ist und warum es f√ºr Quarto technisch notwendig ist,
- wie du Quarto **auch ohne Terminalwissen** nutzen k√∂nnen,
- welche Programme du daf√ºr brauchst (RStudio, VS Code, Positron),

---

## Was ist ein Terminal?

Ein **Terminal** (auch "Befehlszeile" oder "Konsole") ist ein Textfenster, in dem du direkt Befehle an den Computer schreibst.

Ein typisches Beispiel (unter Windows):
`quarto render dokument.qmd``

Dieser Befehl sagt Quarto: "Bitte render das Dokument `dokument.qmd`."

F√ºr viele Lehrende ist das Terminal ungewohnt oder abschreckend. Die gute Nachricht:

> **Du musst das Terminal nicht nutzen**, um mit Quarto zu arbeiten!

## Warum braucht Quarto trotzdem das Terminal?

Quarto selbst ist ein sogenanntes **CLI-Programm** (Command Line Interface). Es **l√§uft im Hintergrund** √ºber die Befehlszeile ‚Äì selbst wenn du es √ºber RStudio oder VS Code bedienst.

Das bedeutet:
- Die Benutzeroberfl√§che (GUI) ist nicht in Quarto selbst enthalten.
- Aber: Viele moderne Editoren *k√∂nnen Quarto einbetten* ‚Äì damit wird alles bequem klickbar.


## Option 1: Quarto in RStudio nutzen (vermutlich m√∂glich √ºber managed Windows Laptops)

RStudio ist besonders f√ºr Lehrende geeignet, da es:

- leicht zu bedienen ist,
- Quarto **automatisch erkennt**,
- Vorschau & Render-Button enth√§lt.

### Schritt-f√ºr-Schritt:

1. **Installier R und RStudio** (falls noch nicht vorhanden)
   - [https://posit.co/download/rstudio-desktop/](https://posit.co/download/rstudio-desktop/)

2. **Installier Quarto**:
   - [https://quarto.org/docs/get-started/](https://quarto.org/docs/get-started/)
   - Quarto wird systemweit installiert und von RStudio erkannt.

3. **Neues Projekt anlegen** (`File > New Project`)
4. **Neue Quarto-Datei erstellen** (`File > New File > Quarto Document`)
5. **Rendern durch Klick auf den "Render"-Button**


![GUI in Rstudio wenn du ein neues Projekt mit File > New Project erstellst](screenshots/gui_projekt.png){#fig-gui}



## Option 2: Quarto in Visual Studio Code (VS Code) nutzen

VS Code ist ein sehr m√§chtiger Editor, aber technisch etwas komplexer.

### Voraussetzungen:

- [Visual Studio Code](https://code.visualstudio.com/)
- Quarto CLI (muss installiert sein)
- **Quarto VS Code Extension**

### Schritt-f√ºr-Schritt:

1. **Quarto installieren** (wie oben)
2. **VS Code installieren**
3. **Quarto-Erweiterung installieren**:
   - √ñffne den Extensions-Tab (Symbol: Bl√∂cke)
   - Suche nach "Quarto"
   - Klicke auf ‚ÄûInstallieren‚Äú

![GUI in VSCode mit der installierten Quarto Extension](screenshots/gui_vscode.png){#fig-gui}

4. Neue `.qmd`-Datei erstellen ‚Üí `Datei > Neu`
5. Oben erscheint eine **"Render"-Schaltfl√§che**, sobald eine `.qmd`-Datei aktiv ist

üì∑ *Screenshot: Quarto-Datei in VS Code mit Render-Button* ‚Üí `screenshot-vscode-render.png`

---

## Positron

[Positron](https://posit.co/blog/positron/) ist ein neuer, schlanker Editor speziell f√ºr Quarto ‚Äì noch in Entwicklung (Stand: 2025), aber **vielversprechend f√ºr didaktische Kontexte**.

Vorteile:
- Minimalistisch, kein R oder VS Code n√∂tig
- Fokus auf `.qmd`-Dateien
- Eingebaute Quarto-Unterst√ºtzung

![Positron-Fenster in welchem in grerade diese Anleitung schreibe](screenshots/gui_positron_inception.png){#fig-gui}


## Test: Ist Quarto installiert?

Wenn du dir nicht sicher sind, ob Quarto korrekt installiert ist, kannst du  das Terminal √∂ffnen und folgendes eingeben:

```bash
quarto check
```
