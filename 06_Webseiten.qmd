# Quarto Webseite organisieren

In diesem Kapitel lernst du, wie du eine einfache Quarto-Webseite strukturierst: Ordner anlegen, Seiten verknÃ¼pfen, Navigation steuern und das Aussehen festlegen. Alles ohne Terminal.

---

## Projektstruktur anlegen

FÃ¼r eine kleine Webseite genÃ¼gt eine Ã¼berschaubare Struktur:

```
mein-webprojekt/
â”œâ”€ _quarto.yml
â”œâ”€ index.qmd
â”œâ”€ about.qmd
â”œâ”€ material/
â”‚  â”œâ”€ index.qmd
â”‚  â””â”€ arbeitsblatt.qmd
â”œâ”€ images/
â”‚  â””â”€ phbern-logo.png
â””â”€ styles.css
```

- `index.qmd`: Startseite
- `about.qmd`: Ãœber mich oder Kontakt
- `material/`: Unterordner fÃ¼r Materialien
- `images/`: Grafiken und Logos
- `styles.css`: Eigene Gestaltung (optional)
- `_quarto.yml`: Zentrale Steuerdatei fÃ¼r die ganze Webseite

ğŸ“¸ Screenshot: Explorer mit den Dateien und Ordnern

---

## Die zentrale Datei _quarto.yml

In dieser Datei sagst du Quarto, dass es sich um eine Webseite handelt und wie Navigation und Design aussehen. Beispiel:

```yaml
project:
  type: website

website:
  title: "Meine Unterrichtswebseite"
  navbar:
    left:
      - href: index.qmd
        text: Start
      - href: about.qmd
        text: Ãœber mich
      - text: Materialien
        menu:
          - href: material/index.qmd
            text: Ãœbersicht
          - href: material/arbeitsblatt.qmd
            text: Arbeitsblatt
  page-navigation: true   # Vor/ZurÃ¼ck-Navigation am Seitenende

format:
  html:
    theme: cosmo          # Ein helles Bootstrap-Thema
    toc: true             # Inhaltsverzeichnis rechts
    number-sections: false
    css: styles.css       # Optional eigene CSS-Datei
```

Hinweise:
- `project.type: website` macht aus dem Ordner eine Webseite.
- `website.navbar` steuert die MenÃ¼leiste oben.
- `format.html` definiert Aussehen und Optionen fÃ¼r alle Seiten.

ğŸ“¸ Screenshot: _quarto.yml in Positron geÃ¶ffnet

---

## Seiten anlegen und verlinken

Beispiel fÃ¼r eine Startseite `index.qmd`:

```markdown
---
title: "Willkommen"
---

## Was dich erwartet

Hier findest du Materialien, Hinweise und Termine zum Unterricht.

- [Ãœber mich](about.qmd)
- [Materialien](material/index.qmd)
```

Beispiel fÃ¼r eine Material-Ãœbersicht `material/index.qmd` mit automatischem Listing:

```markdown
---
title: "Materialien"
listing:
  contents: .
  sort: "date desc"
  type: default
---

Hier erscheinen automatisch die Unterseiten in diesem Ordner.
```

Tipp: Neue Seiten einfach mit `File â†’ New File â†’ Quarto Documentâ€¦` erstellen und an passender Stelle speichern.

ğŸ“¸ Screenshot: Neues Quarto-Dokument anlegen

---

## Navigation steuern

Die Reihenfolge im MenÃ¼ bestimmst du in `_quarto.yml` unter `website.navbar.left`. Alles, was dort steht, erscheint oben. Unterpunkte legst du mit `menu:` an (siehe Beispiel oben).

Optional kannst du statt einer Top-Navigation links eine Seitenleiste nutzen:

```yaml
website:
  sidebar:
    style: "docked"
    search: true
    contents:
      - index.qmd
      - about.qmd
      - section: "Materialien"
        contents:
          - material/index.qmd
          - material/arbeitsblatt.qmd
```

Nur eine der beiden Varianten gleichzeitig verwenden (Navbar oder Sidebar), sonst wirkt es unruhig.

ğŸ“¸ Screenshot: Darstellung mit Sidebar

---

## Einstellungen pro Seite

Jede `.qmd`-Seite kann eigene Optionen im Kopfbereich bekommen, zum Beispiel:

```markdown
---
title: "Arbeitsblatt Prozentrechnung"
toc: true
page-layout: article
---

Hier steht der Inhalt.
```

HÃ¤ufig genutzte Einstellungen:
- `title`: Seitentitel in der Kopfzeile und im Browser-Tab
- `toc: true`: Inhaltsverzeichnis auf der Seite
- `page-layout`: z. B. `article`, `full`, `custom`

---

## Aussehen anpassen

Du kannst ein Thema und eigenes CSS kombinieren. Im Beispiel oben verwenden wir `theme: cosmo` und zusÃ¤tzlich `styles.css`.

Beispiel fÃ¼r `styles.css`:

```css
/* Ãœberschriften etwas grÃ¶ÃŸer */
h1 { font-size: 2.0rem; }
h2 { font-size: 1.6rem; }

/* Maximale Breite fÃ¼r bessere Lesbarkeit */
.quarto-container { max-width: 980px; }
```

ğŸ“¸ Screenshot: Browseransicht mit angepasstem Stil

---

## Webseite bauen und anschauen

Ohne Terminal, direkt in Positron oder RStudio:

1. Ã–ffne `index.qmd`.
2. Klicke oben rechts auf **Render**.
3. Quarto baut die gesamte Seite und legt die Ergebnisse im Ordner `_site/` ab.
4. Die Startseite Ã¶ffnet sich im Browser.

Wenn du spÃ¤ter nur eine Seite Ã¤nderst, genÃ¼gt erneut **Render**. Quarto aktualisiert die Webseite.

ğŸ“¸ Screenshot: Render-Button und fertige Seite im Browser

---

## HÃ¤ufige Fragen

**Wo liegen die fertigen Dateien?**  
Im Ordner `_site/`. Dort befindet sich eine `index.html` und alle zugehÃ¶rigen Dateien.

**Wie bekomme ich die Seite ins Netz?**  
Einfacher Start: Den gesamten Ordner `_site/` auf deinen Webspace kopieren. Fortgeschrittene MÃ¶glichkeiten sind Quarto Pub oder GitHub Pages. FÃ¼r den Einstieg reicht lokales Testen und ggf. ein Webspace-Upload.

**Was mache ich bei Fehlern in der Navigation?**  
PrÃ¼fe Schreibweisen der Dateinamen und die EinrÃ¼ckungen in `_quarto.yml`. YAML reagiert empfindlich auf EinrÃ¼ckungen mit Leerzeichen.

---

## Zusammenfassung

- Mit `_quarto.yml` steuerst du Navigation, Titel und Design der gesamten Webseite.
- Jede Seite ist eine `.qmd`-Datei mit optionalen Seiteneinstellungen im Kopfbereich.
- Ordne Inhalte in Ordnern wie `material/` und `images/`.
- Mit **Render** baust du die komplette Webseite, die im Ordner `_site/` landet.
