# Quarto Webseite organisieren

:::{.callout-note}
## Lernziele

Nach diesem Kapitel verstehst du:

- wie du ein Quartoprojekt aufsetzt.
- wie du Einstellungen vornimmst.
- welche Vorteile ein Projekt gegen√ºber Einzeldateien hat.

:::

## Projektstruktur anlegen

F√ºr eine kleine Webseite gen√ºgt eine √ºberschaubare Struktur:

```
mein-webprojekt/
‚îú‚îÄ _quarto.yml
‚îú‚îÄ index.qmd
‚îú‚îÄ about.qmd
‚îú‚îÄ material/
‚îÇ  ‚îú‚îÄ index.qmd
‚îÇ  ‚îî‚îÄ arbeitsblatt.qmd
‚îú‚îÄ images/
‚îÇ  ‚îî‚îÄ phbern-logo.png
‚îî‚îÄ styles.css
```

- `index.qmd`: Startseite
- `about.qmd`: √úber mich oder Kontakt
- `material/`: Unterordner f√ºr Materialien
- `images/`: Grafiken und Logos
- `styles.css`: Eigene Gestaltung (optional)
- `_quarto.yml`: Zentrale Steuerdatei f√ºr die ganze Webseite

Du kannst die Ordnerstruktur h√§ndisch anlegen, aber dein Textprogramm, z.B. Rstudio kann es auch f√ºr dich anlegen.

Klicke daf√ºr auf `file`-> `new project` -> `new directory` und w√§hle einen Ordner an einem passenden Ort auf deinem Festspeicher.

![W√§hle hier "new website"](screenshots/rstudio_new_project.png){#fig-2}

![Die Einstellungen kannst du so lassen](screenshots/rstudio_new_project_2.png){#fig-3}

Jetzt hast du alles notwendigen Dateien mit ein paar Voreinstellungen im gew√§hlten Ordner drin.

![W√§hle rechts unten das Tab "Files", dann beh√§ltst du den √úberblick](screenshots/rstudio_new_project_3.png){#fig-3}

Wenn du jetzt `render`klickst, dann erh√§ltst du im "Viewer"-Tab die Webseite! 

![Rechts die Webseite mit Men√º oben und Hyperlink in blau](screenshots/rstudio_new_project_4.png){#fig-3}

In deinen Files ist ein neuer Order `_site` hinzugekommen. Darin enthalten ist deine Webseite. Viele Webseite, sogenannte statische Webseiten, sind nichts weiter als ein Ordner voll mit Textdateien (html-Dateien), welche von deinem Internet-Browser angezeigt werden k√∂nnen. Sp√§ter kannst du genau diese Webseite m√ºhelos vom Internet aus zug√§nglich machen.

![Der neue _site Ordner enth√§lt deine Webseite](screenshots/rstudio_new_project_4.png){#fig-4}

Du kannst auch die `html`-Dateien mit R-Studio √∂ffnen, dann siehst du den Quellcode. Ist interessant, aber hilft uns jetzt nicht.

## Einstellungen vornehmen _quarto.yml

In Quarto ist alles √ºber Text eingestellt. In einzelnen Dateien hast du oben das `Yaml` geschrieben. In Projekten, wie z.B. deine Webseite, gibt es eine zentrale `Yaml`-Datei, die sich automatisch auf alle Quarto-Dokumente auswirkt.  

In der `_quarto.yml` sagst du Quarto, dass es sich um eine Webseite handelt und wie Navigation und Design aussehen. Beispiel:

```yaml
project:
  type: website

website:
  title: "Meine Unterrichtswebseite"
  navbar:
    left:
      - href: index.qmd
        text: Start
      - href: about.qmd
        text: √úber mich
      - text: Materialien
        menu:
          - href: material/index.qmd
            text: √úbersicht
          - href: material/arbeitsblatt.qmd
            text: Arbeitsblatt
  page-navigation: true   # Vor/Zur√ºck-Navigation am Seitenende

format:
  html:
    theme: cosmo          # Ein helles Bootstrap-Thema
    toc: true             # Inhaltsverzeichnis rechts
    number-sections: false
    css: styles.css       # Optional eigene CSS-Datei
```


![Die Yaml Datei in Rstudio](screenshots/rstudio_yaml.png){#fig-5}

:::{.callout-caution}

Benenne `_quarto.yml` und `index.qmd` nicht um. Deine Homepage, also die Startsteite, muss immer `index.qmd`heissen, sonst erh√§ltst du einen Fehler.
:::


## Seiten anlegen und verlinken

Beispiel f√ºr eine Startseite `index.qmd`:

```markdown
---
format: html
title: "Meine_Kurswebseite"
subtitle: intrinsische Motivation f√ºr Extrinsiker
author: Richard Conrardy
date: today
---

# Herzlich Willkommen im Kurs

Freut mich, dass du hier bist.

## Thema 1

Informationen √ºber mich findest auf [hier](about.qmd).

## Thema 2
```

![Und so sieht die Index-Page aus](screenshots/rstudio_beispiel_hoempage.png){#fig-5}

Nun ist das Datum noch auf Englisch eingestellt. Da du vermutlich global, also auf der gesamten Webseite, die Sprache auf Deutsch haben m√∂chtest, √§nderst du die Einstellung in `_quarto.yml` und f√ºgt an der **richtigen Stelle** `lang: de` hinzu. Achte auch auf die genauen Abst√§nde.

```markdown
format:
  html:
    lang: de
    theme:
      - cosmo
      - brand
```

Render die `index.qmd` neu und das Datum wird auf Deutsch angezeigt. Magst du das Datumformat nicht, kein Problem, f√ºge noch ein `dateformat` hinzu:

```markdown
    lang: de
    date-format: "DD.MM.YYYY"
```

M√∂chtest du im Dokument `index.qmd` ein spezifisches Datum angeben, musst du es im Iso-Format angeben:

```markdown
---
format: html
title: "Meine_Kurswebseite"
subtitle: intrinsische Motivation f√ºr Extrinsiker
author: Richard Conrardy
date: 2025-10-31
---
```

## Listings

Du kannst selbstverst√§ndlich deine Seiten im Men√º anzeigen lassen. Aber vielleicht ist es auch ganz praktisch eine Tabelle zu haben mit deinen Lerngelegenheiten.

Erstelle zuerst einen Ordner mit den Namen "lerngelegenheiten", erstelle im Ordner mehrere `.qmd`-Files mit Titel.

Im Yaml-Header der `index.qmd`-Datei kannst du nun folgendes hinzuf√ºgen:

```markdown
---
title: "Materialien"
listing:
  contents: lerngelegenheiten/*.qmd
  sort: "date desc"
  type: table
---
```

Nun hast du eine tabellarische Liste mit allen `qmd`-Dateien im Ordner `lerngelegenheiten`.

![Links das Yaml, rechts die Webseite mit Tabelle, unten die Ordnerstruktur](screenshots/rstudio_listings.png){#fig-5}

---

## Navigation steuern

Die Reihenfolge im Men√º bestimmst du in `_quarto.yml` unter `website.navbar.left`. Alles, was dort steht, erscheint oben. Unterpunkte legst du mit `menu:` an (siehe Beispiel oben).

Optional kannst du statt einer Top-Navigation links eine Seitenleiste nutzen:

```yaml
website:
  sidebar:
    style: "docked"
    search: true
    contents:
      - index.qmd
      - about.qmd
      - section: "Materialien"
        contents:
          - material/index.qmd
          - material/arbeitsblatt.qmd
```

Nur eine der beiden Varianten gleichzeitig verwenden (Navbar oder Sidebar), sonst wirkt es unruhig.

üì∏ Screenshot: Darstellung mit Sidebar

---

## Einstellungen pro Seite

Jede `.qmd`-Seite kann eigene Optionen im Kopfbereich bekommen, zum Beispiel:

```markdown
---
title: "Arbeitsblatt Prozentrechnung"
toc: true
page-layout: article
---

Hier steht der Inhalt.
```

H√§ufig genutzte Einstellungen:
- `title`: Seitentitel in der Kopfzeile und im Browser-Tab
- `toc: true`: Inhaltsverzeichnis auf der Seite
- `page-layout`: z. B. `article`, `full`, `custom`

---

## Aussehen anpassen

Du kannst ein Thema und eigenes CSS kombinieren. Im Beispiel oben verwenden wir `theme: cosmo` und zus√§tzlich `styles.css`.

Beispiel f√ºr `styles.css`:

```css
/* √úberschriften etwas gr√∂√üer */
h1 { font-size: 2.0rem; }
h2 { font-size: 1.6rem; }

/* Maximale Breite f√ºr bessere Lesbarkeit */
.quarto-container { max-width: 980px; }
```

üì∏ Screenshot: Browseransicht mit angepasstem Stil

---

## Webseite bauen und anschauen

Ohne Terminal, direkt in Positron oder RStudio:

1. √ñffne `index.qmd`.
2. Klicke oben rechts auf **Render**.
3. Quarto baut die gesamte Seite und legt die Ergebnisse im Ordner `_site/` ab.
4. Die Startseite √∂ffnet sich im Browser.

Wenn du sp√§ter nur eine Seite √§nderst, gen√ºgt erneut **Render**. Quarto aktualisiert die Webseite.

üì∏ Screenshot: Render-Button und fertige Seite im Browser

---

## H√§ufige Fragen

**Wo liegen die fertigen Dateien?**  
Im Ordner `_site/`. Dort befindet sich eine `index.html` und alle zugeh√∂rigen Dateien.

**Wie bekomme ich die Seite ins Netz?**  
Einfacher Start: Den gesamten Ordner `_site/` auf deinen Webspace kopieren. Fortgeschrittene M√∂glichkeiten sind Quarto Pub oder GitHub Pages. F√ºr den Einstieg reicht lokales Testen und ggf. ein Webspace-Upload.

**Was mache ich bei Fehlern in der Navigation?**  
Pr√ºfe Schreibweisen der Dateinamen und die Einr√ºckungen in `_quarto.yml`. YAML reagiert empfindlich auf Einr√ºckungen mit Leerzeichen.

---

## Zusammenfassung

- Mit `_quarto.yml` steuerst du Navigation, Titel und Design der gesamten Webseite.
- Jede Seite ist eine `.qmd`-Datei mit optionalen Seiteneinstellungen im Kopfbereich.
- Ordne Inhalte in Ordnern wie `material/` und `images/`.
- Mit **Render** baust du die komplette Webseite, die im Ordner `_site/` landet.
